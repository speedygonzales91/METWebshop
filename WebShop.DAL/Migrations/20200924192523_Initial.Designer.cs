// <auto-generated />
using METWebShop.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace METWebShop.DAL.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200924192523_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8");

            modelBuilder.Entity("METWebShop.Core.Data.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<string>("InfoToDelivery")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ZipCode")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("METWebShop.Core.Data.OrderProduct", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Amount")
                        .HasColumnType("INTEGER");

                    b.HasKey("OrderId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderProducts");
                });

            modelBuilder.Entity("METWebShop.Core.Data.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImagePath")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(80);

                    b.Property<int>("Price")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductType")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImagePath = "SULYZO.png",
                            Name = "Súlyzókészlet 2X2 KG",
                            Price = 7000,
                            ProductType = 1
                        },
                        new
                        {
                            Id = 2,
                            ImagePath = "HASKEREK.png",
                            Name = "Haskerék",
                            Price = 6000,
                            ProductType = 1
                        },
                        new
                        {
                            Id = 3,
                            ImagePath = "JOGASZONYEG.png",
                            Name = "Jógaszőnyeg",
                            Price = 8000,
                            ProductType = 1
                        },
                        new
                        {
                            Id = 4,
                            ImagePath = "TORULKOZO.png",
                            Name = "Mikroszálas törölköző 42 X 55 cm",
                            Price = 1400,
                            ProductType = 1
                        },
                        new
                        {
                            Id = 5,
                            ImagePath = "UGROKOTEL.png",
                            Name = "Ugrókötél",
                            Price = 4000,
                            ProductType = 1
                        },
                        new
                        {
                            Id = 6,
                            ImagePath = "PILATESLABDA.png",
                            Name = "Pilates labda Átmérő: 26 cm",
                            Price = 2400,
                            ProductType = 1
                        },
                        new
                        {
                            Id = 7,
                            ImagePath = "PILATESKARIKA.png",
                            Name = "Pilates karika Átmérő:40 cm",
                            Price = 8000,
                            ProductType = 1
                        },
                        new
                        {
                            Id = 8,
                            ImagePath = "FITBALL55CM.png",
                            Name = "Fitball Átmérő:55 cm",
                            Price = 6800,
                            ProductType = 1
                        },
                        new
                        {
                            Id = 9,
                            ImagePath = "FITBALL65CM.png",
                            Name = "Fitball Átmérő:65 cm",
                            Price = 7600,
                            ProductType = 1
                        },
                        new
                        {
                            Id = 10,
                            ImagePath = "FITBALL75CM.png",
                            Name = "Fitball Átmérő:75 cm",
                            Price = 8800,
                            ProductType = 1
                        },
                        new
                        {
                            Id = 11,
                            ImagePath = "FITBALL85 CM.png",
                            Name = "Fitball Átmérő:85 cm",
                            Price = 10000,
                            ProductType = 1
                        },
                        new
                        {
                            Id = 12,
                            ImagePath = "PILATES PUMPA.png",
                            Name = "Pilates pumpa",
                            Price = 8000,
                            ProductType = 1
                        });
                });

            modelBuilder.Entity("METWebShop.Core.Data.User", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Balance")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("METWebShop.Core.Data.Order", b =>
                {
                    b.HasOne("METWebShop.Core.Data.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("METWebShop.Core.Data.OrderProduct", b =>
                {
                    b.HasOne("METWebShop.Core.Data.Order", "Order")
                        .WithMany("OrderProducts")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("METWebShop.Core.Data.Product", "Product")
                        .WithMany("OrderProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
